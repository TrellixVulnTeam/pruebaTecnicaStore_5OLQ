{"version":3,"file":"angular-delegate.d.ts","sources":["angular-delegate.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ApplicationRef, ComponentFactoryResolver, Injector, NgZone, ViewContainerRef } from '@angular/core';\r\nimport { FrameworkDelegate } from '@ionic/core';\r\nexport declare class AngularDelegate {\r\n    private zone;\r\n    private appRef;\r\n    constructor(zone: NgZone, appRef: ApplicationRef);\r\n    create(resolver: ComponentFactoryResolver, injector: Injector, location?: ViewContainerRef): AngularFrameworkDelegate;\r\n}\r\nexport declare class AngularFrameworkDelegate implements FrameworkDelegate {\r\n    private resolver;\r\n    private injector;\r\n    private location;\r\n    private appRef;\r\n    private zone;\r\n    private elRefMap;\r\n    private elEventsMap;\r\n    constructor(resolver: ComponentFactoryResolver, injector: Injector, location: ViewContainerRef | undefined, appRef: ApplicationRef, zone: NgZone);\r\n    attachViewToDom(container: any, component: any, params?: any, cssClasses?: string[]): Promise<any>;\r\n    removeViewFromDom(_container: any, component: any): Promise<void>;\r\n}\r\nexport declare const attachView: (zone: NgZone, resolver: ComponentFactoryResolver, injector: Injector, location: ViewContainerRef, appRef: ApplicationRef, elRefMap: WeakMap<HTMLElement, any>, elEventsMap: WeakMap<HTMLElement, () => void>, container: any, component: any, params: any, cssClasses: string[]) => any;\r\nexport declare const bindLifecycleEvents: (zone: NgZone, instance: any, element: HTMLElement) => () => void;\r\n"]}