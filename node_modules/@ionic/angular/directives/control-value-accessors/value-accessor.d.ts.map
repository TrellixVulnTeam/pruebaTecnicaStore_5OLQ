{"version":3,"file":"value-accessor.d.ts","sources":["value-accessor.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { AfterViewInit, ElementRef, Injector, OnDestroy } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare class ValueAccessor implements ControlValueAccessor, AfterViewInit, OnDestroy {\r\n    protected injector: Injector;\r\n    protected el: ElementRef;\r\n    private onChange;\r\n    private onTouched;\r\n    protected lastValue: any;\r\n    private statusChanges?;\r\n    constructor(injector: Injector, el: ElementRef);\r\n    writeValue(value: any): void;\r\n    handleChangeEvent(el: HTMLElement, value: any): void;\r\n    _handleBlurEvent(el: any): void;\r\n    registerOnChange(fn: (value: any) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n}\r\nexport declare const setIonicClasses: (element: ElementRef<any>) => void;\r\n"]}