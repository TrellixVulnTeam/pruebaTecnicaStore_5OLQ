{"version":3,"file":"ion-tabs.d.ts","sources":["ion-tabs.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { NavController } from '../../providers/nav-controller';\r\nimport { IonTabBar } from '../proxies';\r\nimport { IonRouterOutlet } from './ion-router-outlet';\r\nimport { StackEvent } from './stack-utils';\r\nexport declare class IonTabs {\r\n    private navCtrl;\r\n    outlet: IonRouterOutlet;\r\n    tabBar: IonTabBar | undefined;\r\n    ionTabsWillChange: EventEmitter<{\r\n        tab: string;\r\n    }>;\r\n    ionTabsDidChange: EventEmitter<{\r\n        tab: string;\r\n    }>;\r\n    constructor(navCtrl: NavController);\r\n    /**\r\n     * @internal\r\n     */\r\n    onPageSelected(detail: StackEvent): void;\r\n    /**\r\n     * When a tab button is clicked, there are several scenarios:\r\n     * 1. If the selected tab is currently active (the tab button has been clicked\r\n     *    again), then it should go to the root view for that tab.\r\n     *\r\n     *   a. Get the saved root view from the router outlet. If the saved root view\r\n     *      matches the tabRootUrl, set the route view to this view including the\r\n     *      navigation extras.\r\n     *   b. If the saved root view from the router outlet does\r\n     *      not match, navigate to the tabRootUrl. No navigation extras are\r\n     *      included.\r\n     *\r\n     * 2. If the current tab tab is not currently selected, get the last route\r\n     *    view from the router outlet.\r\n     *\r\n     *   a. If the last route view exists, navigate to that view including any\r\n     *      navigation extras\r\n     *   b. If the last route view doesn't exist, then navigate\r\n     *      to the default tabRootUrl\r\n     */\r\n    select(ev: CustomEvent): Promise<boolean>;\r\n    getSelected(): string | undefined;\r\n}\r\n"]}